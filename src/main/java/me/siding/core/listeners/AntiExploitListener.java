package me.siding.core.listeners;

import me.siding.core.utils.Color;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.block.BlockFace;
import org.bukkit.entity.Horse;
import org.bukkit.entity.Pig;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPistonExtendEvent;
import org.bukkit.event.player.PlayerBedEnterEvent;
import org.bukkit.event.player.PlayerLoginEvent;
import org.bukkit.event.player.PlayerTeleportEvent;
import org.bukkit.event.vehicle.VehicleEnterEvent;

public class AntiExploitListener implements Listener {

    String username = "^[a-zA-Z0-9_]+$";


    @EventHandler
    public void onPlayerJoin(PlayerLoginEvent e) {
        String name = e.getPlayer().getName();
        if (!name.matches(this.username)) {
            e.setKickMessage(Color.translate("&a&l(!) &aYour name contains the following &n" + this.username));
            e.setResult(PlayerLoginEvent.Result.KICK_OTHER);
        }
    }

    @EventHandler
    public void onSleep(PlayerBedEnterEvent e) {
        e.setCancelled(true);
        e.getPlayer().sendMessage(Color.translate("&a&l(!) &aYou cannot sleep."));
    }

    @EventHandler
    public void onHorseRide(VehicleEnterEvent e) {
        if ((e.getVehicle() instanceof Horse || e.getVehicle() instanceof Pig) && e.getEntered() instanceof Player) {
            e.setCancelled(true);
            ((Player) e.getEntered()).sendMessage(Color.translate("&a&l(!) &aYou cannot ride &nanimals&a."));
        }
    }

    @EventHandler
    public void onPlayerTeleportVehicle(PlayerTeleportEvent event) {
        Player player = event.getPlayer();
        if (player.getPlayer().getVehicle() != null && player.isInsideVehicle()) {
            player.sendMessage(Color.translate("&a&L(!) &aYou cannot teleport while on a &nvehicle&a."));
            event.setCancelled(true);
        }
    }

    @EventHandler(priority = EventPriority.LOWEST, ignoreCancelled = true)
    public void onPistonMoveBlock(BlockPistonExtendEvent event) {
        Block push = event.getBlock().getRelative(event.getDirection(), event.getLength() + 1);
        if (push.getType() == Material.MELON_BLOCK || push.getType() == Material.PUMPKIN || push.getType() == Material.SUGAR_CANE_BLOCK || push.getType() == Material.COCOA)
            event.setCancelled(true);
    }

    @EventHandler
    public void onBlockPistonExtendEvent(BlockPistonExtendEvent e) {
        if (e.getBlock().getWorld().getEnvironment() == World.Environment.NETHER && e.getBlock().getY() >= 120 &&
                e.getDirection() == BlockFace.UP)
            for (Block b : e.getBlocks()) {
                if (b.getLocation().getY() >= 124.0D)
                    e.setCancelled(true);
            }
    }

}
